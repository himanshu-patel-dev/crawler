version: "3.9"

services:
  django:
    build: .
    command: gunicorn crawler_service.wsgi:application --bind 0.0.0.0:8000 --workers=3
    volumes:
      - static_volume:/app/staticfiles
    expose:
      - "8000"
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    entrypoint: ["/app/entrypoint.sh"]

  dispatcher:
    build: .
    command: python manage.py dispatch_urls --batch 10 --loop
    env_file:
      - .env
    depends_on:
      - django
      - redis
      - postgres

  celery_worker:
    build: .
    command: celery -A crawler_service worker -l info -Q crawler
    env_file:
      - .env
    depends_on:
      - redis
      - django
      - postgres

  flower:
    build: .
    command: celery -A crawler_service flower --port=5555
    ports:
      - "5555:5555"
    env_file:
      - .env
    depends_on:
      - redis
      - django

  redis:
    image: redis:6-alpine
    restart: always

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/staticfiles
    ports:
      - "80:80"
    depends_on:
      - django

  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: crawlerdb
      POSTGRES_USER: crawleruser
      POSTGRES_PASSWORD: crawlerpass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crawleruser -d crawlerdb"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  static_volume:
  postgres_data:
